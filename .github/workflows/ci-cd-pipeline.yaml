name: Node.js CI/CD Docker Compose Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker
        uses: docker/setup-qemu-action@v1
        with:
          platform: linux/amd64

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image using Docker Compose
        run: |
          docker compose -f docker-compose.yml build

      - name: Run tests inside Docker container
        run: |
          docker compose -f docker-compose.yml run --rm nodeapp npm test  

      - name: Tag Docker images
        run: |
          # Tag nodeapp image
          docker tag nodeapp:latest ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest
          # Tag mysql image
          docker tag mysql:latest ${{ secrets.DOCKER_USERNAME }}/mysql:latest
          # Tag mongodb image
          docker tag mongodb:latest ${{ secrets.DOCKER_USERNAME }}/mongodb:latest

      - name: Push Docker images to Docker Hub
        run: |
          # Push nodeapp image
          docker push ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest
          # Push mysql image
          docker push ${{ secrets.DOCKER_USERNAME }}/mysql:latest
          # Push mongodb image
          docker push ${{ secrets.DOCKER_USERNAME }}/mongodb:latest
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH for EC2 deployment
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Docker Compose to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd /path/to/your/project
            git pull origin main
            docker compose -f docker-compose.yml down  # Stop and remove existing containers
            docker compose -f docker-compose.yml up --build -d  # Build and run the containers
          EOF